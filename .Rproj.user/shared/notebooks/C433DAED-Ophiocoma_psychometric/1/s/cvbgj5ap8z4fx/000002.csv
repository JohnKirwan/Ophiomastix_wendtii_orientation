"0","df %>% as_tibble %>%                 # dataframe name"
"0","  mutate(in.quad = ifelse(abs(heading) < pi/4, 1, 0)) %>% # for data in radians -pi to pi"
"0","  mutate(in.pent = ifelse(abs(heading) < pi/5, 1, 0)) %>% # for data in radians -pi to pi"
"0","  mutate(in.sext = ifelse(abs(heading) < pi/6, 1, 0)) %>% # for data in radians -pi to pi"
"0","  mutate(in.oct = ifelse(abs(heading) < pi/8, 1, 0))  %>% # for data in radians -pi to pi"
"0","  group_by(Type) %>%                # condition name"
"0","  summarize(target = round(Type * 180 / pi)[1],"
"0","            n_obs = n(),                   ## observations for treatment"
"0","            #uniq_ind = n_distinct(individual),    ## unique individuals by treatment"
"0","            mu = round(180*mean.circular(heading)/pi,0),"
"0","            lo.ci = round(180*mle.vonmises.bootstrap.ci(heading)$mu.ci[1]/pi),"
"0","            hi.ci = round(180*mle.vonmises.bootstrap.ci(heading)$mu.ci[2]/pi),"
"0","            rho = round(rho.circular(heading),2),"
"0","            kappa = unlist(mle.vonmises(heading)[3]), "
"0","            v.stat =unlist(rayleigh.test(heading,mu=0)[1]),"
"0","            v.p= unlist(rayleigh.test(heading,mu=0)[2]),"
"0","            rayl.stat=unlist(rayleigh.test(heading)[1]),"
"0","            rayl.p= unlist(rayleigh.test(heading)[2]),"
"0","            c.mean = unlist(mean.circular(heading)[1]),"
"0","            quad.prop = sum(in.quad)/length(in.quad),"
"0","            pent.prop = sum(in.pent)/length(in.pent),"
"0","            sext.prop = sum(in.sext)/length(in.sext),"
"0","            oct.prop = sum(in.oct)/length(in.oct),"
"0","            binom.p6 = unlist("
"0","                binom.test(sum(in.sext),length(in.sext),"
"0","                p=1/6,alternative = ""greater"")[3]),"
"0","            binom.p8 = unlist("
"0","                binom.test(sum(in.oct),length(in.oct),"
"0","                p=1/8,alternative = ""greater"")[3]),"
"0","            binom.p5 = unlist("
"0","                binom.test(sum(in.pent),length(in.pent),"
"0","                p=1/5,alternative = ""greater"")[3])) -> circ_fun_facts"
"0","## output dataframe"
"0","circ_fun_facts"
